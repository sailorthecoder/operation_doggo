[{"/home/salarmalik/work/operation_doggo/src/components/DogCard.tsx":"1","/home/salarmalik/work/operation_doggo/src/components/FavoritesModal.tsx":"2","/home/salarmalik/work/operation_doggo/src/components/PaginationControls.tsx":"3","/home/salarmalik/work/operation_doggo/src/components/ProtectedRoute.tsx":"4","/home/salarmalik/work/operation_doggo/src/pages/_app.tsx":"5","/home/salarmalik/work/operation_doggo/src/pages/index.tsx":"6","/home/salarmalik/work/operation_doggo/src/pages/match.tsx":"7","/home/salarmalik/work/operation_doggo/src/pages/search.tsx":"8","/home/salarmalik/work/operation_doggo/src/tests/DogSearchPage.test.js":"9","/home/salarmalik/work/operation_doggo/src/tests/LoginPage.test.js":"10","/home/salarmalik/work/operation_doggo/src/types.ts":"11"},{"size":967,"mtime":1696571084436,"results":"12","hashOfConfig":"13"},{"size":962,"mtime":1696570310596,"results":"14","hashOfConfig":"13"},{"size":893,"mtime":1696527163634,"results":"15","hashOfConfig":"13"},{"size":448,"mtime":1696524411154,"results":"16","hashOfConfig":"13"},{"size":667,"mtime":1696524579714,"results":"17","hashOfConfig":"13"},{"size":1751,"mtime":1696529339444,"results":"18","hashOfConfig":"13"},{"size":1016,"mtime":1696570418556,"results":"19","hashOfConfig":"13"},{"size":8151,"mtime":1696571091886,"results":"20","hashOfConfig":"13"},{"size":451,"mtime":1696525756964,"results":"21","hashOfConfig":"13"},{"size":554,"mtime":1696525758164,"results":"22","hashOfConfig":"13"},{"size":1216,"mtime":1696570997366,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cl771s",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/salarmalik/work/operation_doggo/src/components/DogCard.tsx",[],[],"/home/salarmalik/work/operation_doggo/src/components/FavoritesModal.tsx",[],[],"/home/salarmalik/work/operation_doggo/src/components/PaginationControls.tsx",[],[],"/home/salarmalik/work/operation_doggo/src/components/ProtectedRoute.tsx",[],[],"/home/salarmalik/work/operation_doggo/src/pages/_app.tsx",[],[],"/home/salarmalik/work/operation_doggo/src/pages/index.tsx",[],[],"/home/salarmalik/work/operation_doggo/src/pages/match.tsx",[],[],"/home/salarmalik/work/operation_doggo/src/pages/search.tsx",["58","59"],[],"import React, { useState, useEffect, useMemo } from \"react\";\nimport { useRouter } from 'next/router';\nimport FavoritesModal from \"../components/FavoritesModal\";\nimport DogCard from \"../components/DogCard\";\nimport PaginationControls from \"../components/PaginationControls\";\nimport { Dog, SearchPageProps } from \"../types\";\nimport db from '../db.json'\nimport LoadingDog from '../../public/lottieFiles/LoadingDog.json';\nimport Lottie from 'lottie-react';\nimport styles from './css/dogSearchPage.module.css';\n\nexport const getStaticProps = async () => {\n  const dogData = db;\n  return { props: { dogData } };\n};\n\nconst SearchPage: React.FC<SearchPageProps> = ({ handleLogout, dogData }) => {\n\n  const PAGE_SIZE = 25;\n  const router = useRouter();\n  const [breeds, setBreeds] = useState<string[]>([]);\n  const [selectedBreed, setSelectedBreed] = useState<string | null>(null);\n  const [dogs, setDogs] = useState<Dog[]>([]);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [isAscending, setIsAscending] = useState<boolean>(true);\n  const [favorites, setFavorites] = useState<Dog[]>([]);\n  const [totalDogs, setTotalDogs] = useState<number>(0);\n  const [ageMin, setAgeMin] = useState<number | null>(null);\n  const [ageMax, setAgeMax] = useState<number | null>(null);\n  const [tempAgeMin, setTempAgeMin] = useState<number | null>(null);\n  const [tempAgeMax, setTempAgeMax] = useState<number | null>(null);\n  const [isFavoritesModalOpen, setIsFavoritesModalOpen] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const totalPages = useMemo(() => Math.ceil(totalDogs / PAGE_SIZE), [totalDogs, PAGE_SIZE]);\n\n\n  useEffect(() => {\n    const fetchBreeds = () => {\n      const breedsFromData = Array.from(new Set(dogData.dogData.map(dog => dog.breed))).sort();\n      setBreeds(breedsFromData);\n    };\n    fetchBreeds();\n  }, []);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchDogs = () => {\n      let filteredDogs = dogData.dogData;\n      if (selectedBreed) {\n        filteredDogs = filteredDogs.filter(dog => dog.breed === selectedBreed);\n      }\n      if (ageMin !== null) {\n        filteredDogs = filteredDogs.filter(dog => dog.age >= ageMin);\n      }\n      if (ageMax !== null) {\n        filteredDogs = filteredDogs.filter(dog => dog.age <= ageMax);\n      }\n      if (isAscending) {\n        filteredDogs.sort((a, b) => a.breed.localeCompare(b.breed));\n      } else {\n        filteredDogs.sort((a, b) => b.breed.localeCompare(a.breed));\n      }\n      const startIndex = (currentPage - 1) * PAGE_SIZE;\n      const paginatedDogs = filteredDogs.slice(startIndex, startIndex + PAGE_SIZE);\n      setTotalDogs(filteredDogs.length);\n      setDogs(paginatedDogs);\n      setIsLoading(false);\n    };\n    fetchDogs();\n  }, [selectedBreed, currentPage, isAscending, ageMin, ageMax]);\n\n  const handleApplyFilter = () => {\n    let isInvalid = false;\n    if (tempAgeMin !== null && tempAgeMin < 0) {\n      isInvalid = true;\n    }\n    if (tempAgeMax !== null && tempAgeMax < 0) {\n      isInvalid = true;\n    }\n    if (tempAgeMin !== null && tempAgeMax !== null && tempAgeMin > tempAgeMax) {\n      isInvalid = true;\n    }\n    if (!isInvalid) {\n      setAgeMin(tempAgeMin);\n      setAgeMax(tempAgeMax);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < totalPages) {\n      setCurrentPage(prevPage => prevPage + 1);\n    }\n  };\n\n  const handlePrevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(prevPage => prevPage - 1);\n    }\n  };\n\n  const handleBreedChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = event.target.value;\n    setSelectedBreed(value === \"all\" ? null : value);\n    setCurrentPage(1);\n  };\n\n  const toggleSortOrder = () => {\n    setIsAscending(prevIsAscending => !prevIsAscending);\n    if (selectedBreed === null) {\n      setCurrentPage(1);\n    }\n  };\n\n  const toggleFavorite = (dog: Dog) => {\n    setFavorites(prev => {\n      if (prev.some(favDog => favDog.id === dog.id)) {\n        return prev.filter(favDog => favDog.id !== dog.id);\n      } else {\n        return [...prev, dog];\n      }\n    });\n  };\n\n  const getMatch = () => {\n    const randomIndex = Math.floor(Math.random() * favorites.length);\n    const matchedDog = favorites[randomIndex];\n    const dogDataString = encodeURIComponent(JSON.stringify(matchedDog));\n    router.push(`/match?dog=${dogDataString}`);\n};\n\n  const onLogout = () => {\n    handleLogout();\n    router.push('/');;\n  }\n\n  return (\n    <div className={styles.dogSearchPage}>\n      <h4 className={styles.title}>Search for Dogs</h4>\n      <div className={styles.header}>\n        {isFavoritesModalOpen && (\n          <FavoritesModal\n            favorites={favorites}\n            getMatch={getMatch}\n            onRemove={(dogId) => {setFavorites(prev => prev.filter(dog => dog.id !== dogId))}}\n            onClose={() => setIsFavoritesModalOpen(false)}\n          />\n        )}\n        <div className={styles.upperContainer}>\n          <select\n              value={selectedBreed === null ? 'all' : selectedBreed}\n              onChange={handleBreedChange}\n              className={styles.breedSelect}\n          >\n            <option value=\"\" disabled>Select a breed</option>\n            <option value=\"all\">All breeds</option>\n            {breeds.map(breed => (\n              <option key={breed} value={breed}>\n                {breed}\n              </option>\n            ))}\n          </select>\n          {favorites.length > 0 && (\n          <div className={styles.buttonsContainer}>\n            <button onClick={() => setIsFavoritesModalOpen(true)}>\n              Favorites: üêï {favorites.length} üêï\n            </button>\n            <button onClick={getMatch} className={styles.getMatchButton}>Get Matched!</button>\n          </div>\n            )}\n        </div>\n        <div className={styles.sortFilterContainer}>\n          {selectedBreed === null && (\n            <button onClick={toggleSortOrder}>\n              Sort by Breed: {isAscending ? 'Ascending' : 'Descending'}\n            </button>\n          )}\n          <div className={styles.ageFilters}>\n            <label>\n              Filter by Age:\n              <input\n                type=\"number\"\n                min=\"0\"\n                value={tempAgeMin ?? ''}\n                onChange={(e) => setTempAgeMin(Number(e.target.value) || null)}\n                placeholder=\"Min\"\n              />\n              -\n              <input\n                type=\"number\"\n                min=\"0\"\n                value={tempAgeMax ?? ''}\n                onChange={(e) => setTempAgeMax(Number(e.target.value) || null)}\n                placeholder=\"Max\"\n              />\n            </label>\n              {(tempAgeMin !== null && tempAgeMin < 0) ||\n              (tempAgeMax !== null && tempAgeMax < 0) ||\n              (tempAgeMin !== null && tempAgeMax !== null && tempAgeMin > tempAgeMax) ? (\n                  <p style={{ color: 'red' }}>Please enter a valid range</p>\n              ) : null}\n          </div>\n          <button onClick={handleApplyFilter} className={styles.applyFilterButton}>Apply Filter</button>\n          </div>\n      </div>\n      {isLoading ? (\n        <div className={styles.loadingPlaceholder}>\n          <Lottie animationData={LoadingDog}/>\n        </div>\n      ) : (\n        <div className={styles.dogCardsContainer}>\n          {dogs.map(dog => (\n            <DogCard\n            key={dog.id}\n            dog={dog}\n            onButtonClick={() => toggleFavorite(dog)}\n            buttonLabel={favorites.some(favDog => favDog.id === dog.id) ? \"Added to Favorites\" : \"Add to Favorites\"}\n            buttonColor={favorites.some(favDog => favDog.id === dog.id) ? 'green' : '#007BFF'}\n            customStyle={{ maxWidth: '250px' }}\n            />\n          ))}\n        </div>\n      )}\n      <PaginationControls\n        currentPage={currentPage}\n        totalPages={totalPages}\n        handleNextPage={handleNextPage}\n        handlePrevPage={handlePrevPage}\n        setCurrentPage={setCurrentPage}\n      />\n      <button onClick={onLogout} className={styles.logoutButton}>Log Out</button>\n    </div>\n  )\n}\n\nexport default SearchPage;","/home/salarmalik/work/operation_doggo/src/tests/DogSearchPage.test.js",[],[],"/home/salarmalik/work/operation_doggo/src/tests/LoginPage.test.js",[],[],"/home/salarmalik/work/operation_doggo/src/types.ts",[],[],{"ruleId":"60","severity":1,"message":"61","line":43,"column":6,"nodeType":"62","endLine":43,"endColumn":8,"suggestions":"63"},{"ruleId":"60","severity":1,"message":"61","line":70,"column":6,"nodeType":"62","endLine":70,"endColumn":63,"suggestions":"64"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dogData.dogData'. Either include it or remove the dependency array.","ArrayExpression",["65"],["66"],{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},"Update the dependencies array to be: [dogData.dogData]",{"range":"71","text":"72"},"Update the dependencies array to be: [selectedBreed, currentPage, isAscending, ageMin, ageMax, dogData.dogData]",{"range":"73","text":"74"},[1872,1874],"[dogData.dogData]",[2776,2833],"[selectedBreed, currentPage, isAscending, ageMin, ageMax, dogData.dogData]"]